@Override
public Blocage getBlocageByPageAndIdElement(String page, Integer idElement, Utilisateur utilisateur) {
	if (StringUtil.isEmptyString(page)) {
		return null;
	}

	Criteria crit = getHibernateTemplate().getSessionFactory().getCurrentSession().createCriteria(Blocage.class);
	crit.add(Restrictions.eq("page", page));
	if (idElement != null && idElement > 0) {
		crit.add(Restrictions.eq("idElement", idElement));
	}
	if (utilisateur != null) {
		crit.add(Restrictions.eq("utilisateurEnCours.id", utilisateur.getId()));
	}
	crit.setMaxResults(1);
	return (Blocage) crit.uniqueResult();
}

@Override
public DeEtat getDernierDeEtat(DemandeEngagement de) {
	String req = "select det from DeEtat det inner join det.utilisateur utilisateur inner join det.etat etat where de.id = :de_id order by det.id desc limit 1";
	Query q = getHibernateTemplate().getSessionFactory().getCurrentSession().createQuery(req).setParameter("de_id", de.getId());
	return (DeEtat) q.uniqueResult();
}
